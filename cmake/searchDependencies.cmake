SET(CMAKE_LIBRARY_PATH ${GOTHICSCRIPTANALYZER_DEP_DIR})

#----------------------------------------------------
# GMock
#----------------------------------------------------

IF(WITH_TESTS)
	IF(WIN32 AND NOT ANDROID AND NOT EXISTS "${GOTHICSCRIPTANALYZER_DEP_DIR}/gmock/")
		execute_process(COMMAND ${CMAKE_SOURCE_DIR}/dependencies/build-gmock.bat ${VS_TOOLCHAIN} ${VS_ARCH} WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/dependencies)
	ENDIF(WIN32 AND NOT ANDROID AND NOT EXISTS "${GOTHICSCRIPTANALYZER_DEP_DIR}/gmock/")
	IF(UNIX AND NOT ANDROID AND NOT EXISTS "${GOTHICSCRIPTANALYZER_DEP_DIR}/gmock/")
		execute_process(COMMAND ${CMAKE_SOURCE_DIR}/dependencies/build-gmock.sh ${UNIX_COMPILER} WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/dependencies)
	ENDIF(UNIX AND NOT ANDROID AND NOT EXISTS "${GOTHICSCRIPTANALYZER_DEP_DIR}/gmock/")
	SET(LIBNAME "GTEST")
	SET(LIBHEADER "gtest/gtest.h")
	SET(GTEST_ROOT ${GOTHICSCRIPTANALYZER_DEP_DIR}/gmock)
	SET(GTEST_COMPONENT ${GTEST_COMPONENT} gtest)

	find_package(EasyFind REQUIRED COMPONENTS ${GTEST_COMPONENT})
	include_directories(SYSTEM ${GTEST_INCLUDE_DIR})
ENDIF(WITH_TESTS)
#----------------------------------------------------
# Qt
#----------------------------------------------------

IF(UNIX AND NOT ANDROID)
	SET(ENV{Qt5_DIR} "")
ENDIF()

SET(QT_WEBENGINE_VERSION 5.6.0)

# Test for supported Qt version
find_program(QMAKE_EXECUTABLE NAMES qmake HINTS $ENV{Qt5_DIR} ENV QTDIR PATH_SUFFIXES bin)
execute_process(COMMAND ${QMAKE_EXECUTABLE} -query QT_VERSION OUTPUT_VARIABLE QT_VERSION)

SET(QT_SEARCH_MODULES "")

IF(QT_VERSION LESS QT_WEBENGINE_VERSION)
	SET(QT_SEARCH_MODULES ${QT_SEARCH_MODULES} Core)
ELSE()
	SET(QT_SEARCH_MODULES ${QT_SEARCH_MODULES} Core)
ENDIF()

FIND_PACKAGE(Qt5 REQUIRED ${QT_SEARCH_MODULES} HINTS $ENV{Qt5_DIR})

IF(QT_VERSION LESS QT_WEBENGINE_VERSION)
	INCLUDE_DIRECTORIES(${Qt5Core_INCLUDE_DIRS})
	SET(QT_LIBRARIES ${QT_LIBRARIES} ${Qt5Core_LIBRARIES})
ELSE()
	INCLUDE_DIRECTORIES(SYSTEM ${Qt5Core_INCLUDE_DIRS})
	SET(QT_LIBRARIES ${QT_LIBRARIES} ${Qt5Core_LIBRARIES})
ENDIF()

